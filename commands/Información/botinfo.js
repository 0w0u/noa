require('moment-duration-format');
module.exports = class command extends require('../../base/models/Command.js') {
  constructor(client) {
    super(client, {
      name: 'botinfo',
      description: 'Muestra estad√≠sticas sobre el bot',
      usage: (prefix) => `\`${prefix}botinfo\``,
      examples: (prefix) => `\`${prefix}botinfo\``,
      enabled: true,
      cooldown: 5,
      aliases: [],
      botPermissions: [],
      memberPermissions: [],
      dirname: __dirname,
    });
  }
  async run(message, args, data, embed) {
    let client = this.client;
    try {
      let msg = await message.channel.send(client.fns.reply('generating', message)),
        jav = await client.users.fetch(client.config.owners[1]),
        mon = await client.users.fetch(client.config.owners[0]);
      let dblV = await client.dbl.getBot(client.config.botID);
      client.dbl.noaMP = dblV.monthlyPoints;
      client.dbl.noaP = dblV.points;
      embed
        .setColor(client.fns.selectColor('lightcolors'))
        .setTitle(client.message({ emoji: 'üìö', raz√≥n: 'informaci√≥n de ' + client.config.bot, message }))
        .addField('<:ncStats:704042636519931994> ~ Estad√≠sticas', '```‚Ä¢ Shards: ' + client.shard.count.toLocaleString() + '\n‚Ä¢ Servidores: ' + client.guilds.cache.size.toLocaleString() + '\n‚Ä¢ Usuarios: ' + client.userCount.toLocaleString() + '\n‚Ä¢ Canales: ' + client.channels.cache.size.toLocaleString() + '\n‚Ä¢ Votos: ' + client.dbl.noaP.toLocaleString() + ' (' + client.dbl.noaMP.toLocaleString() + ' este mes)```')
        .addField('<:ncProgramming:704043125215199339> ~ Programaci√≥n', `\`\`\`‚Ä¢ Lenguaje: JavaScript\n‚Ä¢ Librer√≠a: discord.js v${require('discord.js').version}\n‚Ä¢ Comandos: ${client.commands.size}\n‚Ä¢ Memoria en Uso: ${(process.memoryUsage().heapUsed / 1024 / 1024).toFixed(2)}/${(require('os').totalmem() / 1024 / 1024).toFixed(2)} MB\n‚Ä¢ Uptime: ${require('moment').duration(client.uptime).format(' D [d√≠as], H [horas], m [min], s [segs]')}\`\`\``)
        .addField('Enlaces', `[Inv√≠tame ‚ù§Ô∏è](https://noa.wwmon.xyz/invite) | [Soporte ‚ùì](https://noa.wwmon.xyz/support) | [Donaciones üíù](https://noa.wwmon.xyz/donate) | [DBL ü§ñ](https://noa.wwmon.xyz/dbl) | [Vota üì•](https://noa.wwmon.xyz/vote) | [Web (WIP) üåê](https://noa.wwmon.xyz/)`)
        .setFooter('Versi√≥n: ' + require('../../package.json').version + ' | Desarrollado por: ' + jav.tag + ' y ' + mon.tag)
        .setTimestamp();
      msg.edit('** **', { embed });
    } catch (e) {
      client.err({
        type: 'command',
        name: this.help.name,
        error: e,
        message,
      });
    }
  }
};
